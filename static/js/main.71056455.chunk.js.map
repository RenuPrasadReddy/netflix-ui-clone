{"version":3,"sources":["makeReq.js","components/Row.js","requests.js","components/Banner.js","components/Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","opts","height","width","playerVars","autoplay","Row","props","title","fetchUrl","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","axiosInstance","get","response","console","log","data","results","fetchData","className","map","movie","isLargeRow","onClick","name","movieTrailer","replaceAll","then","url","urlParams","URLSearchParams","URL","search","catch","err","handleMovie","src","poster_path","backdrop_path","alt","id","videoId","API_KEY","requests","fetchNetflixOriginals","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","titles","genresList","Object","values","Banner","str","n","setMovie","randomNum","Math","ceil","random","length","style","backgroundSize","backgroundImage","original_name","overview","substr","Nav","show","App","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71056455.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://api.themoviedb.org/3`\r\n})\r\n\r\nexport default instance;","import React, { useEffect, useState } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport axiosInstance from \"../makeReq\";\r\nimport \"./Row.css\";\r\n\r\nconst imageBaseUrl = \"https://image.tmdb.org/t/p/original/\";\r\nconst opts = {\r\n  height: \"390\",\r\n  width: \"100%\",\r\n  playerVars: {\r\n    autoplay: 1,\r\n  },\r\n};\r\n\r\nconst Row = (props) => {\r\n  const { title, fetchUrl } = props;\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axiosInstance.get(fetchUrl);\r\n      console.log(title, response.data.results);\r\n      setMovies(response.data.results);\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const handleMovie = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\"); // if any movie trailer is already opened, close it\r\n    } else {\r\n      console.log(\"m name=\",movie?.name)\r\n      movieTrailer(movie?.name.replaceAll(\" \", \"\") || \"\")\r\n        .then((url) => {\r\n            // to get queryParams, \r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          console.log(\"v=\",urlParams.get(\"v\"))\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((err) => console.log(\"error while getting url\", err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2 className=\"row_title\">{title}</h2>\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            className={`row_poster ${props.isLargeRow && \"row_posterLarge\"}`}\r\n            key={movie.id}\r\n            onClick={()=>handleMovie(movie)}\r\n            src={`${imageBaseUrl}${\r\n              props.isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n\r\n// export default function Row(props) {\r\n//     return(\r\n//         <div>\r\n//             {props.title}\r\n//         </div>\r\n//     )\r\n// }\r\n","const API_KEY = \"b9bbd153a995cc370aa23fbf6af028ba\";\r\n\r\nconst requests = {\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n};\r\n\r\nexport default requests;\r\nexport const titles = [\r\n  \"NETFLIX ORIGINALS\",\r\n  \"Trending\",\r\n  \"Top Rated\",\r\n  \"Action Movies\",\r\n  \"Comedy Movies\",\r\n  \"Horror Movies\",\r\n  \"Romance Movies\",\r\n  \"Documentaries\",\r\n];\r\nexport const genresList = Object.values(requests);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axiosInstance from \"../makeReq\";\r\nimport requests from \"../requests\";\r\nimport './banner.css'\r\n\r\nconst imageBaseUrl = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Banner = () => {\r\n  const [movie, setMovie] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n        const response = await axiosInstance.get(requests.fetchNetflixOriginals);\r\n        console.log({response});\r\n        let randomNum = Math.ceil(Math.random() * response.data.results.length -1);\r\n        // console.log('num=', randomNum);\r\n\r\n        setMovie(response.data.results[randomNum]);\r\n      // get random number and get that move and set it to setMovie\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n    // console.log('movie in banner=', movie);\r\n\r\n    /* {some background-image} */\r\n    /* {div with 2 buttons} */\r\n    /* {desctiption} */   \r\n\r\n  function truncate(str,n) {\r\n    return str?.length > n ? str.substr(0, n-1)+'...' : str;\r\n  }\r\n\r\n  return (\r\n    <header className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(${imageBaseUrl}${movie?.backdrop_path})`,\r\n        // backgroundPosition: \"center center\"\r\n      }}\r\n    >\r\n\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n\r\n        <div className=\"banner_buttons\">\r\n            <button className=\"banner_button\">Play</button>\r\n            <button className=\"banner_button\">My List</button>\r\n        </div>\r\n\r\n        <h1 className=\"banner_description\">\r\n            {/* {movie?.overview} */}\r\n            {truncate(movie?.overview, 150)}\r\n        </h1>\r\n        \r\n      </div>\r\n    <div className=\"banner_fadeBottom\"></div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useEffect,useState } from \"react\";\r\nimport './nav.css'\r\n\r\nconst Nav = () => {\r\n\r\n  const [show, handleShow] = useState(false);\r\n\r\n  // useEffect(()=> {\r\n\r\n  //   function handleScroll() {\r\n  //     window.scrollY > 100 ? handleShow(true) : handleShow(false);\r\n  //   }\r\n  //   window.addEventListener('scroll', handleScroll);\r\n\r\n  //   // cleanUp\r\n  //   return ()=> window.removeEventListener('scroll', handleScroll);\r\n  // }, [])\r\n  \r\n\r\n\r\n  // useEffect(()=> {\r\n  //   window.addEventListener('scroll', ()=> {\r\n  //     window.scrollY > 100 ? handleShow(true) : handleShow(false);\r\n  //   });\r\n\r\n\r\n  //   const cleanup=()=> {\r\n  //     window.removeEventListener('scroll');\r\n  //   }\r\n  //   return cleanup;\r\n  // }, [])\r\n\r\n  return (\r\n    <div className={`nav ${show && 'nav_black'}`}>\r\n{      console.log(\"show=\",show)}\r\n      <img className=\"nav_logo\" \r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/250px-Netflix_2015_logo.svg.png\"\r\n        alt=\"Netflix_logo\" />\r\n        <img\r\n        className=\"nav_avatar\"\r\n        src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import \"./App.css\";\nimport Row from \"./components/Row\";\nimport { titles, genresList } from \"./requests\";\nimport Banner from './components/Banner';\nimport Nav from './components/Nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      {titles.map((title, i) => {\n        return (\n          <Row\n            key={title}\n            title={title}\n            fetchUrl={genresList[i]}\n            isLargeRow={title === \"NETFLIX ORIGINALS\" ? true : false}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}